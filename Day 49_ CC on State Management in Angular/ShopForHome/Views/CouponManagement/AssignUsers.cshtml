@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

    Temp UI
*@
@{
}


<!-- Views/CouponManagement/AssignUsers.cshtml -->
@model ShopForHome.ViewModels.AssignUsersViewModel
@{
    ViewData["Title"] = "Assign Users";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title">
                <i class="fas fa-users me-3"></i>Assign Users to Coupon
            </h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "CouponManagement")">Coupons</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Details", new { id = Model.CouponId })">@Model.CouponCode</a></li>
                    <li class="breadcrumb-item active">Assign Users</li>
                </ol>
            </nav>
        </div>
        <div class="btn-group">
            <a href="@Url.Action("Details", new { id = Model.CouponId })" class="btn btn-info">
                <i class="fas fa-eye me-2"></i>View Details
            </a>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Coupons
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-user-plus me-2"></i>Select Users for Coupon: <strong>@Model.CouponCode</strong>
                        </h5>
                        <div class="btn-group btn-group-sm">
                            <button type="button" class="btn btn-light btn-sm" onclick="selectAll()">
                                <i class="fas fa-check-double me-1"></i>Select All
                            </button>
                            <button type="button" class="btn btn-light btn-sm" onclick="deselectAll()">
                                <i class="fas fa-times me-1"></i>Deselect All
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <form asp-action="AssignUsers" method="post" id="assignUsersForm">
                        <input asp-for="CouponId" type="hidden" />
                        <input asp-for="CouponCode" type="hidden" />

                        <!-- Search Bar -->
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-search"></i>
                                    </span>
                                    <input type="text" class="form-control" placeholder="Search users by name or email..." id="userSearchInput">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="d-flex align-items-center">
                                    <span class="me-3 text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        <span id="selectedCount">@(Model.Users?.Count(u => u.IsSelected) ?? 0)</span> selected
                                    </span>
                                    <span class="text-muted">
                                        Total: @(Model.Users?.Count ?? 0) users
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Users List -->
                        <div class="user-selection-container">
                            @if (Model.Users != null && Model.Users.Any())
                            {
                                <div class="row g-3" id="usersContainer">
                                    @for (int i = 0; i < Model.Users.Count; i++)
                                    {
                                        var user = Model.Users[i];
                                        <div class="col-md-6 user-card" data-user-name="@user.FullName.ToLower()" data-user-email="@user.Email.ToLower()">
                                            <div class="card h-100 @(user.IsSelected ? "border-primary" : "")">
                                                <div class="card-body p-3">
                                                    <div class="form-check">
                                                        <input class="form-check-input user-checkbox"
                                                               type="checkbox"
                                                               name="SelectedUserIds"
                                                               value="@user.UserId"
                                                               id="user_@user.UserId"
                                                               @(user.IsSelected ? "checked" : "")
                                                               onchange="updateSelectedCount(); updateCardStyle(this);">
                                                        <label class="form-check-label w-100 cursor-pointer" for="user_@user.UserId">
                                                            <div class="d-flex align-items-center">
                                                                <div class="me-3">
                                                                    <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center text-white"
                                                                         style="width: 40px; height: 40px; font-weight: 600;">
                                                                        @user.FullName.First().ToString().ToUpper()
                                                                    </div>
                                                                </div>
                                                                <div class="flex-grow-1">
                                                                    <div class="fw-semibold">@user.FullName</div>
                                                                    <small class="text-muted">@user.Email</small>
                                                                </div>
                                                                <div class="ms-2">
                                                                    <i class="fas fa-check text-primary check-icon" style="display: @(user.IsSelected ? "inline" : "none");"></i>
                                                                </div>
                                                            </div>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-5">
                                    <i class="fas fa-users fa-3x text-muted mb-3"></i>
                                    <h5 class="text-muted">No Users Available</h5>
                                    <p class="text-muted">There are no active users to assign to this coupon.</p>
                                </div>
                            }
                        </div>

                        <!-- Action Buttons -->
                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <a href="@Url.Action("Details", new { id = Model.CouponId })" class="btn btn-outline-info">
                                            <i class="fas fa-eye me-2"></i>View Coupon Details
                                        </a>
                                    </div>
                                    <div class="d-flex gap-2">
                                        <a href="@Url.Action("Details", new { id = Model.CouponId })" class="btn btn-secondary">
                                            <i class="fas fa-times me-2"></i>Cancel
                                        </a>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save me-2"></i>Save Assignments
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Right Sidebar - Assignment Summary -->
        <div class="col-lg-4">
            <div class="card sticky-top" style="top: 2rem;">
                <div class="card-header bg-info text-white">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-clipboard-list me-2"></i>Assignment Summary
                    </h6>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label text-muted">Coupon Code</label>
                        <div class="fw-bold fs-5 text-primary">@Model.CouponCode</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Selected Users</label>
                        <div class="fw-bold fs-4" id="summarySelectedCount">
                            @(Model.Users?.Count(u => u.IsSelected) ?? 0)
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Total Available Users</label>
                        <div class="fw-bold">@(Model.Users?.Count ?? 0)</div>
                    </div>

                    <div class="alert alert-info" role="alert">
                        <div class="d-flex">
                            <i class="fas fa-info-circle me-2 mt-1"></i>
                            <div>
                                <small>
                                    <strong>Note:</strong> Only active users with "User" role are shown.
                                    Selected users will be able to use this private coupon.
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .cursor-pointer {
        cursor: pointer;
    }

    .user-card {
        transition: all 0.2s ease;
    }

    .card.border-primary {
        border-width: 2px !important;
        box-shadow: 0 4px 8px rgba(0, 123, 255, 0.1);
    }

    .user-selection-container {
        max-height: 600px;
        overflow-y: auto;
    }

    .check-icon {
        transition: all 0.2s ease;
    }

    .form-check-input:checked ~ .form-check-label .check-icon {
        transform: scale(1.1);
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        updateSelectedCount();
    });

    function selectAll() {
        const checkboxes = document.querySelectorAll('.user-checkbox:not(:disabled)');
        const visibleCheckboxes = Array.from(checkboxes).filter(cb =>
            cb.closest('.user-card').style.display !== 'none'
        );

        visibleCheckboxes.forEach(checkbox => {
            if (!checkbox.checked) {
                checkbox.checked = true;
                updateCardStyle(checkbox);
            }
        });
        updateSelectedCount();
    }

    function deselectAll() {
        const checkboxes = document.querySelectorAll('.user-checkbox:checked');
        const visibleCheckboxes = Array.from(checkboxes).filter(cb =>
            cb.closest('.user-card').style.display !== 'none'
        );

        visibleCheckboxes.forEach(checkbox => {
            checkbox.checked = false;
            updateCardStyle(checkbox);
        });
        updateSelectedCount();
    }

    function updateSelectedCount() {
        const selectedCount = document.querySelectorAll('.user-checkbox:checked').length;
        document.getElementById('selectedCount').textContent = selectedCount;
        document.getElementById('summarySelectedCount').textContent = selectedCount;
    }

    function updateCardStyle(checkbox) {
        const card = checkbox.closest('.card');
        const checkIcon = card.querySelector('.check-icon');

        if (checkbox.checked) {
            card.classList.add('border-primary');
            checkIcon.style.display = 'inline';
        } else {
            card.classList.remove('border-primary');
            checkIcon.style.display = 'none';
        }
    }

    // Search functionality
    document.getElementById('userSearchInput').addEventListener('keyup', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const userCards = document.querySelectorAll('.user-card');
        let visibleCount = 0;

        userCards.forEach(card => {
            const userName = card.getAttribute('data-user-name');
            const userEmail = card.getAttribute('data-user-email');
            const isVisible = userName.includes(searchTerm) || userEmail.includes(searchTerm);

            card.style.display = isVisible ? '' : 'none';
            if (isVisible) visibleCount++;
        });

        // Update visible count display
        const totalSpan = document.querySelector('.text-muted span').nextSibling;
        if (totalSpan) {
            totalSpan.textContent = ` Total: ${visibleCount} users${searchTerm ? ' (filtered)' : ''}`;
        }
    });

    // Form submission confirmation
    document.getElementById('assignUsersForm').addEventListener('submit', function(e) {
        const selectedCount = document.querySelectorAll('.user-checkbox:checked').length;

        if (selectedCount === 0) {
            if (!confirm('No users are selected. This will remove all existing assignments. Continue?')) {
                e.preventDefault();
                return false;
            }
        } else {
            if (!confirm(`Assign coupon to ${selectedCount} selected user${selectedCount === 1 ? '' : 's'}?`)) {
                e.preventDefault();
                return false;
            }
        }
    });
</script>