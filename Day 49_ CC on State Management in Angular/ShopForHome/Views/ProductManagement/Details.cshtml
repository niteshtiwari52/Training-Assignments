<!-- Views/ProductManagement/Details.cshtml -->
@model ShopForHome.ViewModels.ProductViewModel
@{
    ViewData["Title"] = "Product Details";
    Layout = "_Layout";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title">
                <i class="fas fa-box me-3"></i>Product Details
            </h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "ProductManagement")">Product Management</a></li>
                    <li class="breadcrumb-item active">@Model.Name</li>
                </ol>
            </nav>
        </div>
        <div class="btn-group">
            <a href="@Url.Action("Edit", new { id = Model.ProductId })" class="btn btn-primary">
                <i class="fas fa-edit me-2"></i>Edit Product
            </a>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Products
            </a>
        </div>
    </div>

    <div class="row g-4">
        <!-- Left Column - Product Image -->
        <div class="col-lg-5">
            <div class="card">
                <div class="card-body text-center">
                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <img src="@Model.ImagePath" alt="@Model.Name"
                             class="img-fluid rounded shadow-sm" style="max-height: 400px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="bg-light rounded d-flex align-items-center justify-content-center shadow-sm"
                             style="height: 400px;">
                            <div class="text-center">
                                <i class="fas fa-image fa-4x text-muted mb-3"></i>
                                <p class="text-muted fs-5">No Image Available</p>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-chart-bar me-2"></i>Quick Stats
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row g-3 text-center">
                        <div class="col-6">
                            <div class="border-end">
                                <div class="fs-4 fw-bold text-primary">₹@Model.Price.ToString("N2")</div>
                                <small class="text-muted">Current Price</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="fs-4 fw-bold @(Model.StockQuantity > 0 ? "text-success" : "text-danger")">
                                @Model.StockQuantity
                            </div>
                            <small class="text-muted">In Stock</small>
                        </div>
                        <div class="col-6">
                            <div class="border-end border-top pt-3">
                                <div class="fs-5 fw-bold text-info">@Model.GST%</div>
                                <small class="text-muted">GST Rate</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border-top pt-3">
                                <div class="fs-5 fw-bold text-secondary">
                                    ₹@((Model.Price * Model.GST / 100).ToString("N2"))
                                </div>
                                <small class="text-muted">GST Amount</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column - Product Information -->
        <div class="col-lg-7">
            <!-- Basic Information -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-2"></i>Product Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        <div class="col-12">
                            <h2 class="text-primary mb-2">@Model.Name</h2>
                            <div class="d-flex flex-wrap gap-2 mb-3">
                                <span class="badge bg-primary fs-6 px-3 py-2">
                                    <i class="fas fa-folder me-2"></i>@Model.CategoryName
                                </span>
                                <span class="badge @(Model.StockQuantity > 10 ? "bg-success" : Model.StockQuantity > 0 ? "bg-warning" : "bg-danger") fs-6 px-3 py-2">
                                    <i class="fas @(Model.StockQuantity > 0 ? "fa-check" : "fa-times") me-2"></i>
                                    @(Model.StockQuantity > 0 ? "In Stock" : "Out of Stock")
                                </span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Product ID</label>
                            <div class="fw-semibold fs-5">#@Model.ProductId</div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Category</label>
                            <div class="fw-semibold fs-5">@Model.CategoryName</div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Price</label>
                            <div class="fw-semibold fs-4 text-success">₹@Model.Price.ToString("N2")</div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Stock Quantity</label>
                            <div class="fw-semibold fs-4 @(Model.StockQuantity > 0 ? "text-success" : "text-danger")">
                                @Model.StockQuantity units
                                @if (Model.StockQuantity <= 5 && Model.StockQuantity > 0)
                                {
                                    <small class="text-warning">
                                        <i class="fas fa-exclamation-triangle ms-2"></i>Low Stock
                                    </small>
                                }
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">GST Rate</label>
                            <div class="fw-semibold fs-5">@Model.GST%</div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Price Including GST</label>
                            <div class="fw-semibold fs-5 text-info">₹@((Model.Price + (Model.Price * Model.GST / 100)).ToString("N2"))</div>
                        </div>

                        <div class="col-12">
                            <label class="form-label text-muted">Description</label>
                            <div class="fw-semibold">
                                @if (!string.IsNullOrEmpty(Model.Description))
                                {
                                    <p class="mb-0">@Model.Description</p>
                                }
                                else
                                {
                                    <p class="text-muted mb-0 fst-italic">No description available</p>
                                }
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Created Date</label>
                            <div class="fw-semibold">@Model.CreatedAt.ToString("MMMM dd, yyyy")</div>
                            <small class="text-muted">@Model.CreatedAt.ToString("hh:mm tt")</small>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Last Updated</label>
                            <div class="fw-semibold">@Model.UpdatedAt.ToString("MMMM dd, yyyy")</div>
                            <small class="text-muted">@Model.UpdatedAt.ToString("hh:mm tt")</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-cogs me-2"></i>Actions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row g-2">
                        <div class="col-md-6 col-sm-6">
                            <a href="@Url.Action("Edit", new { id = Model.ProductId })" class="btn btn-primary w-100">
                                <i class="fas fa-edit me-2"></i>Edit Product
                            </a>
                        </div>
                        @* <div class="col-md-6 col-sm-6">
                            <button type="button" class="btn btn-warning w-100" onclick="updateStock(@Model.ProductId)">
                                <i class="fas fa-boxes me-2"></i>Update Stock
                            </button>
                        </div>
                        <div class="col-md-6 col-sm-6">
                            <button type="button" class="btn btn-info w-100" onclick="viewSalesReport(@Model.ProductId)">
                                <i class="fas fa-chart-line me-2"></i>Sales Report
                            </button>
                        </div> *@
                        <div class="col-md-6 col-sm-6">
                            <button type="button" class="btn btn-danger w-100" onclick="confirmDelete(@Model.ProductId, '@Model.Name')">
                                <i class="fas fa-trash me-2"></i>Delete Product
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Information -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-calculator me-2"></i>Price Breakdown
                    </h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-borderless mb-0">
                            <tbody>
                                <tr>
                                    <td class="text-muted">Base Price:</td>
                                    <td class="text-end fw-semibold">₹@Model.Price.ToString("N2")</td>
                                </tr>
                                <tr>
                                    <td class="text-muted">GST (@Model.GST%):</td>
                                    <td class="text-end fw-semibold">₹@((Model.Price * Model.GST / 100).ToString("N2"))</td>
                                </tr>
                                <tr class="border-top">
                                    <td class="fw-bold">Total Price:</td>
                                    <td class="text-end fw-bold fs-5 text-success">
                                        ₹@((Model.Price + (Model.Price * Model.GST / 100)).ToString("N2"))
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Stock Update Modal -->
<div class="modal fade" id="stockModal" tabindex="-1" aria-labelledby="stockModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="stockModalLabel">
                    <i class="fas fa-boxes text-warning me-2"></i>Update Stock
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="stockForm">
                    <div class="mb-3">
                        <label class="form-label">Current Stock</label>
                        <input type="text" class="form-control" value="@Model.StockQuantity units" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="newStock" class="form-label">New Stock Quantity</label>
                        <input type="number" class="form-control" id="newStock" min="0" required>
                    </div>
                    <div class="mb-3">
                        <label for="stockReason" class="form-label">Reason for Change</label>
                        <select class="form-select" id="stockReason">
                            <option value="">Select reason</option>
                            <option value="restock">Restock</option>
                            <option value="sold">Items Sold</option>
                            <option value="damaged">Damaged Items</option>
                            <option value="correction">Stock Correction</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" onclick="saveStockUpdate()">
                    <i class="fas fa-save me-2"></i>Update Stock
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning!</strong> This action cannot be undone.
                </div>
                <p>Are you sure you want to delete the product <strong id="deleteProductName"></strong>?</p>
                <p class="text-muted mb-0">This will permanently remove the product and all associated data.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" class="d-inline">
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete Product
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStock(productId) {
            new bootstrap.Modal(document.getElementById('stockModal')).show();
        }

        function saveStockUpdate() {
            const newStock = document.getElementById('newStock').value;
            const reason = document.getElementById('stockReason').value;

            if (!newStock || !reason) {
                alert('Please fill in all fields');
                return;
            }

            // Here you would implement the actual stock update logic
            alert(`Stock update functionality would update to ${newStock} units for reason: ${reason}`);
            bootstrap.Modal.getInstance(document.getElementById('stockModal')).hide();
        }

        function viewSalesReport(productId) {
            // Implement sales report functionality
            alert('Sales report functionality would be implemented here');
        }

        function confirmDelete(productId, productName) {
            document.getElementById('deleteProductName').textContent = productName;
            document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + productId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Add some interactive effects
        document.addEventListener('DOMContentLoaded', function() {
            // Highlight low stock warning
            const stockElement = document.querySelector('.text-warning');
            if (stockElement && stockElement.textContent.includes('Low Stock')) {
                stockElement.parentElement.classList.add('animate__animated', 'animate__pulse');
            }
        });
    </script>
}